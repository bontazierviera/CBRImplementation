/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package form;

import control.DBKoneksi;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import control.CosineSimilarity;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Zierviera
 */
public class newCase extends javax.swing.JFrame {
Dimension UM = Toolkit.getDefaultToolkit().getScreenSize();
Connection con;
Statement stat;
ResultSet res;
DBKoneksi koneksi;
CosineSimilarity Similiarity = new CosineSimilarity();
    /**
     * Creates new form Add New Case
     */
    public newCase() {
        initComponents();
        this.setTitle("Form Add New Case");
        setLocation(UM.width/2-getWidth()/2,UM.height/2-getHeight()/2);
        show();
        Awal();
        tampilkanImage();
    }
 
    
    public void Awal(){
        txtWarnaMata.setText("");
        txtUkuranBulu.setText("");
        txtBentukWajah.setText("");
        txtWarnaBulu.setText("");
        txtKepribadian.setText("");
        txtJenisKucing.setText("");
        
        txtWarnaMata.requestFocus();
    }
    
 //Method Untuk Memanggil Image/gambar
 public static BufferedImage loadImage(String ref) {
 BufferedImage bimg = null;
 try {
 bimg = ImageIO.read(new File(ref));
 } catch (Exception e) {
 e.printStackTrace();
 }
 return bimg;
 }
 
 //Method untuk Resize Image
 public static BufferedImage resize(BufferedImage img, int
 newW, int newH) {    
 int w = img.getWidth();
 int h = img.getHeight();
 BufferedImage dimg = dimg = new BufferedImage(newW, newH,
 img.getType());
 Graphics2D g = dimg.createGraphics();
 g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
 RenderingHints.VALUE_INTERPOLATION_BILINEAR);
 g.drawImage(img, 0, 0, newW, newH, 0, 0, w, h, null);
 g.dispose();
 return dimg;
 }
 
//Method Untuk Menampilkan Gambar Pada JLabel
public void tampilkanImage(){
String urlGambar = "src/img/logo.png";
BufferedImage loadImg = loadImage(urlGambar);
ImageIcon imageIcon = new ImageIcon(resize(loadImg,
lblGambar.getWidth(), lblGambar.getHeight()));
lblGambar.setIcon(imageIcon);
}    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bgKucing = new img.Background();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        bExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtBentukWajah = new javax.swing.JTextField();
        txtWarnaBulu = new javax.swing.JTextField();
        txtWarnaMata = new javax.swing.JTextField();
        btnSimiliarity = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblGambar = new javax.swing.JLabel();
        txtUkuranBulu = new javax.swing.JTextField();
        txtKepribadian = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtJenisKucing = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Add New Case");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Copyright 2018 By Bonta Zirviera Cirgon");

        bExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit2.png"))); // NOI18N
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Bentuk Wajah");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Warna Mata");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Ukuran Bulu");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Warna Bulu");

        txtWarnaBulu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarnaBuluActionPerformed(evt);
            }
        });
        txtWarnaBulu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtWarnaBuluKeyTyped(evt);
            }
        });

        txtWarnaMata.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWarnaMataKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWarnaMataKeyReleased(evt);
            }
        });

        btnSimiliarity.setText("Save");
        btnSimiliarity.setToolTipText("");
        btnSimiliarity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimiliarityActionPerformed(evt);
            }
        });

        btnCancel.setText("Reset");
        btnCancel.setToolTipText("");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblGambar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblGambar.setForeground(new java.awt.Color(255, 255, 255));
        lblGambar.setText(" ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Kepribadian");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("Jenis Kucing");

        javax.swing.GroupLayout bgKucingLayout = new javax.swing.GroupLayout(bgKucing);
        bgKucing.setLayout(bgKucingLayout);
        bgKucingLayout.setHorizontalGroup(
            bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addComponent(jSeparator2)
            .addGroup(bgKucingLayout.createSequentialGroup()
                .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgKucingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgKucingLayout.createSequentialGroup()
                                .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgKucingLayout.createSequentialGroup()
                                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel9))
                                        .addGap(34, 34, 34)
                                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtJenisKucing, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txtWarnaMata, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtUkuranBulu, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtBentukWajah, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtWarnaBulu, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtKepribadian, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bgKucingLayout.createSequentialGroup()
                                                    .addComponent(btnSimiliarity, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE))
                            .addGroup(bgKucingLayout.createSequentialGroup()
                                .addComponent(lblGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(19, 19, 19))))
                    .addGroup(bgKucingLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bgKucingLayout.setVerticalGroup(
            bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgKucingLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgKucingLayout.createSequentialGroup()
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtWarnaMata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUkuranBulu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtBentukWajah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtWarnaBulu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtKepribadian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtJenisKucing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSimiliarity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bgKucingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgKucing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgKucing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        Kucing kucing = new Kucing();
        kucing.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bExitActionPerformed

    private void btnSimiliarityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimiliarityActionPerformed
       String mata  = txtWarnaMata.getText();
       String bulu  = txtUkuranBulu.getText();
       String wajah = txtBentukWajah.getText();
       String warna = txtWarnaBulu.getText();
       String kepribadian = txtKepribadian.getText();
       String jenisKucing = txtJenisKucing.getText();
                            
       Simpan(mata, bulu, wajah, warna, kepribadian, jenisKucing);
       Awal();
            
    }//GEN-LAST:event_btnSimiliarityActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        Awal();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtWarnaMataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWarnaMataKeyReleased
      
    }//GEN-LAST:event_txtWarnaMataKeyReleased


    public String Cari(int mata, int bulu, int wajah, int warna, int kepribadian) {
        String result = "";
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();

            String sql = "SELECT * from kucing where mata =" + mata + " and bulu =" + bulu + " "
                    + "and wajah=" + wajah + " and warna=" + warna + " and kepribadian=" + kepribadian + "";
            res = st.executeQuery(sql);
            if (res.next()) {
                result = res.getString("jenis");
            } else {
                result = "";
            }

            con.close();
        } catch (Exception e) {
        }

        return result;
    }
    
    public void Simpan(String mata, String bulu, String wajah, String warna, String kepribadian, String jenisKucing){
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();
            
            String sql = "insert into kucing (mata, bulu, wajah, warna, kepribadian, jenis) "
                    + "values('" + mata + "','" + bulu + "','" + wajah + "','" + warna + "','" + kepribadian + "','"+jenisKucing+"')";
           
            int sukses = st.executeUpdate(sql);
            if (sukses > 0) {
                JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan!");
                Awal();
            } else {
                JOptionPane.showMessageDialog(null, "Data Gagal Disimpan!");
            }
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }  
    }
    
    public Double MappingMata(String newInput){
        double result = 0.0;
        newInput = newInput.toLowerCase().trim();
        String lastInput = "";
        double tempResult = 0.0;
        ArrayList<String[]> resultList = new ArrayList<String[]>();

        //similarity here
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();

            String sql = "SELECT mata from kucing";
            res = st.executeQuery(sql);

            int columnCount = res.getMetaData().getColumnCount();
            while (res.next()) {
                String[] lastData = new String[columnCount];
                tempResult = result;
                for (int i = 0; i < columnCount; i++) {
                    lastData[i] = res.getString(i + 1);
                    lastInput = lastData[i];
                    result = Similiarity.Cosine_Similarity_Score(lastInput, newInput);

                    if (result > tempResult) {
                        tempResult = result;
                    } else {
                        result = tempResult;
                    }
                }
                resultList.add(lastData);
            }

            con.close();
        } catch (Exception e) {
        }
        
        return result;    
    }
    
    public Double MappingBulu(String newInput){
        double result = 0.0;
        newInput = newInput.toLowerCase().trim();
        String lastInput = "";
        double tempResult = 0.0;
        ArrayList<String[]> resultList = new ArrayList<String[]>();

        //similarity here
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();

            String sql = "SELECT bulu from kucing";
            res = st.executeQuery(sql);

            int columnCount = res.getMetaData().getColumnCount();
            while (res.next()) {
                String[] lastData = new String[columnCount];
                tempResult = result;
                for (int i = 0; i < columnCount; i++) {
                    lastData[i] = res.getString(i + 1);
                    lastInput = lastData[i];
                    result = Similiarity.Cosine_Similarity_Score(lastInput, newInput);

                    if (result > tempResult) {
                        tempResult = result;
                    } else {
                        result = tempResult;
                    }
                }
                resultList.add(lastData);
            }

            con.close();
        } catch (Exception e) {
        }
        
        return result; 
    }
    
    public Double MappingWajah(String newInput){
        double result = 0.0;
        newInput = newInput.toLowerCase().trim();
        String lastInput = "";
        double tempResult = 0.0;
        ArrayList<String[]> resultList = new ArrayList<String[]>();

        //similarity here
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();

            String sql = "SELECT wajah from kucing";
            res = st.executeQuery(sql);

            int columnCount = res.getMetaData().getColumnCount();
            while (res.next()) {
                String[] lastData = new String[columnCount];
                tempResult = result;
                for (int i = 0; i < columnCount; i++) {
                    lastData[i] = res.getString(i + 1);
                    lastInput = lastData[i];
                    result = Similiarity.Cosine_Similarity_Score(lastInput, newInput);

                    if (result > tempResult) {
                        tempResult = result;
                    } else {
                        result = tempResult;
                    }
                }
                resultList.add(lastData);
            }

            con.close();
        } catch (Exception e) {
        }
        
        return result;   
    }
    
    public Double MappingWarna(String newInput){
        double result = 0.0;
        newInput = newInput.toLowerCase().trim();
        String lastInput = "";
        double tempResult = 0.0;
        ArrayList<String[]> resultList = new ArrayList<String[]>();

        //similarity here
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();

            String sql = "SELECT warna from kucing";
            res = st.executeQuery(sql);

            int columnCount = res.getMetaData().getColumnCount();
            while (res.next()) {
                String[] lastData = new String[columnCount];
                tempResult = result;
                for (int i = 0; i < columnCount; i++) {
                    lastData[i] = res.getString(i + 1);
                    lastInput = lastData[i];
                    result = Similiarity.Cosine_Similarity_Score(lastInput, newInput);

                    if (result > tempResult) {
                        tempResult = result;
                    } else {
                        result = tempResult;
                    }
                }
                resultList.add(lastData);
            }

            con.close();
        } catch (Exception e) {
        }
        
        return result;    
    }
    
    public Double MappingKepribadian(String newInput){
        double result = 0.0;
        newInput = newInput.toLowerCase().trim();
        String lastInput = "";
        double tempResult = 0.0;
        ArrayList<String[]> resultList = new ArrayList<String[]>();

        //similarity here
        try {
            DBKoneksi konek = new DBKoneksi();
            Connection con = konek.openConnection();
            Statement st = con.createStatement();

            String sql = "SELECT kepribadian from kucing";
            res = st.executeQuery(sql);

            int columnCount = res.getMetaData().getColumnCount();
            while (res.next()) {
                String[] lastData = new String[columnCount];
                tempResult = result;
                for (int i = 0; i < columnCount; i++) {
                    lastData[i] = res.getString(i + 1);
                    lastInput = lastData[i];
                    result = Similiarity.Cosine_Similarity_Score(lastInput, newInput);

                    if (result > tempResult) {
                        tempResult = result;
                    } else {
                        result = tempResult;
                    }
                }
                resultList.add(lastData);
            }

            con.close();
        } catch (Exception e) {
        }
        
        return result;    
    }
    
    
    private void txtWarnaMataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWarnaMataKeyPressed

    }//GEN-LAST:event_txtWarnaMataKeyPressed

    private void txtWarnaBuluKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWarnaBuluKeyTyped
    }//GEN-LAST:event_txtWarnaBuluKeyTyped

    private void txtWarnaBuluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarnaBuluActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarnaBuluActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newCase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newCase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newCase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newCase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newCase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExit;
    private img.Background bgKucing;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSimiliarity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblGambar;
    private javax.swing.JTextField txtBentukWajah;
    private javax.swing.JTextField txtJenisKucing;
    private javax.swing.JTextField txtKepribadian;
    private javax.swing.JTextField txtUkuranBulu;
    private javax.swing.JTextField txtWarnaBulu;
    private javax.swing.JTextField txtWarnaMata;
    // End of variables declaration//GEN-END:variables
}
